kubernetesClusterDomain: cluster.local

# Tell Kubernetes to spin up multiple instances.  Defaults to 1.
replicaCount: 1

# It's best to keep these set as such, unless you're willing to change these in several places.
skaha:
  namespace: skaha-system

# Skaha web service deployment
deployment:
  hostname: example.org
  cavern:
    image: images.opencadc.org/platform/cavern:0.9.0
    imagePullPolicy: IfNotPresent

    # How cavern identifies itself.
    resourceID: "ivo://example.org/cavern"

    # Set the Registry URL pointing to the desired registry (https:// URL)
    # registryURL: https://example.org/reg

    # This applies to Cavern itself.  Meaning, this Pod will be scheduled as described
    # by the nodeAffinity clause.
    # See https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/
    # nodeAffinity: {}

    # The Resource ID of the Service that contains the Posix Mapping information
    # posixMapperResourceID: "ivo://example.org/posix-mapper"

    # URI or URL of the OIDC (IAM) server.  Used to validate incoming tokens.  Required.
    # oidcURI: https://ska-iam.stfc.ac.uk/

    # ID (URI) of the GMS Service.  Required
    # gmsID: ivo://skao.int/gms

    # Array of groups allowed to set the logging level.  If none set, then nobody can change the log level.
    # loggingGroups: []

    # Simple Class name of the QuotaPlugin to use.  This is used to request quota and folder size information
    # from the underlying storage system.  Optional, defaults to NoQuotaPlugin.
    #
    # - For CephFS deployments: CephFSQuotaPlugin
    # - Default: NoQuotaPlugin
    #
    # quotaPlugin: {NoQuotaPlugin | CephFSQuotaPlug}

    # User Allocation settings.  This is used to create new folders under the main root allocation folders, namely /home and /projects.
    allocations:
      # Required.  The default size, in GB, of an allocation.  This is used in the absence of the Quota VOSpace property.  Can be a floating point number.
      # Provided value is 10 (10 GiB) by default.
      # Example:
      #   defaultSizeGB: 25.5
      defaultSizeGB: 10

      # The parent folders that will be used to create new allocations.  This is a list of folders that will be created if they do not exist.
      # It's best to keep these as /home and /projects, but you can change them if you wish.  There may be implications!
      # Example:
      #   parentFolders:
      #     - "/home"
      #     - "/projects"
      #     - "/data"
      parentFolders:
        - "/home"
        - "/projects"

    # The /home and /projects folders will be automatically created if not present.
    filesystem:
      # persistent data directory in container
      dataDir: ""

      # RELATIVE path to the node/file content that could be mounted in other containers
      # This will be used in a `dataDir`/`subPath` manner to remove shared data from the root folder.
      # subPath: "cavern"

      # The adminUsername is required to be set whomever has admin access over the
      # filesystem.dataDir above.
      rootOwner:
        # adminUsername: "root"
        username: ""
        uid:
        gid:

      # (optional) base directory exposed for sshfs mounts
      # sshfs:
      #   serverBase: {server}[:{port}]:{path}

    # The API keys object that will be permitted to perform administrative tasks.  These will be passed as authorization headers to the Cavern API.
    # The token values will be used by client applications, and each client matching a clientApplicationName should be configured with the matching token.
    # Format is <clientApplicationName>: <apiKeyToken>
    # Example:
    #   adminAPIKeys:
    #     skaha: "token-value"
    #     prepareData: "another-token-value"
    adminAPIKeys: {}

    # The IdentityManager class handling authentication.  This should generally be left alone.
    identityManagerClass: org.opencadc.auth.StandardIdentityManager

    # For the UWS PostgreSQL database.
    uws:
      db:
        install: true # Whether to deploy a local PostgreSQL database.  Set to false to use your own.
        image: postgres:18.0  # PostgreSQL image to use.
        runUID: 999  # Postgres User default in the postgres:15 image if install: true
        # url: "jdbc:postgresql://<host>:<port>/<database>" # if install: false, then set this to where it should point to
        database: "uws"  # if install: true, otherwise it's ignored
        username: "uwsuser"
        password: "uwspwd"
        schema: "uws"
        maxActive: 2

    # Optional rename of the application from the default "cavern".
    applicationName: "cavern"

    # The endpoint to serve this from.  Defaults to /cavern.  If the applicationName is changed, then this should match.
    # Don't forget to update your registry entries!
    endpoint: "/cavern"

    # Optionally set the DEBUG port.
    # extraEnv:
    # - name: CATALINA_OPTS
    #   value: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5555"
    # - name: JAVA_OPTS
    #   value: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5555"

    # Optionally mount a custom CA certificate
    # extraVolumeMounts:
    # - mountPath: "/config/cacerts"
    #   name: cacert-volume

    # Create the CA certificate volume to be mounted in extraVolumeMounts
    # extraVolumes:
    # - name: cacert-volume
    #   secret:
    #     defaultMode: 420
    #     secretName: skaha-cacert-secret

    # Resources provided to the Skaha service.
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "1Gi"
        cpu: "500m"

  # Specify extra hostnames that will be added to the Pod's /etc/hosts file.  Note that this is in the
  # deployment object, not the skaha one.
  # extraHosts:
  #   - ip: 127.3.34.5
  #     hostname: myhost.example.org
  # extraHosts: []

# This is a list of tolerations that will be added to the Pod spec of the Skaha API.
# @see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
#
# Example:
# tolerations:
# - key: "key1"
#   operator: "Equal"
#   value: "value1"
#   effect: "NoSchedule"
#
tolerations: []

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# Example:
#   livenessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: 8080
#     initialDelaySeconds: 60
livenessProbe: {}

# Example:
#   readinessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: 8080
#     initialDelaySeconds: 30
readinessProbe: {}

secrets:
  # Uncomment to enable local or self-signed CA certificates for your domain to be trusted.
  # cavern-cacert-secret:
  #   ca.crt: <base64 encoded CA crt>

# Exposed extra ports.  Uncomment the java-debug port to expose and debug issues.
# service:
#   cavern:
#     extraPorts:
  #   - port: 5555
  #     protocol: TCP
  #     name: java-debug

# Set these appropriately to match your Persistent Volume Claim labels.
storage:
  service:
    spec:
      # YAML for service mounted storage.
      # Example is the persistentVolumeClaim below.  Do not uncomment this
      # or Helm will use it as the default, even if a different spec
      # is specified.
      # persistentVolumeClaim:
      #   claimName: skaha-pvc
