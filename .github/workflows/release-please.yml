name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      paths_released: ${{ steps.release-please.outputs.paths_released }}
      all_outputs: ${{ toJson(steps.release-please.outputs) }}
    steps:
      - name: Run release-please
        id: release-please
        uses: googleapis/release-please-action@16a9c90856f42705d54a6fda1823352bdc62cf38 # v4
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print release-please outputs
        run: |
          echo "=== Release Please Outputs ==="
          echo "releases_created: ${{ steps.release-please.outputs.releases_created }}"
          echo "paths_released: ${{ steps.release-please.outputs.paths_released }}"
          echo ""
          echo "=== All Outputs (JSON) ==="
          echo '${{ toJson(steps.release-please.outputs) }}'

  release-matrix:
    needs: release
    if: ${{ needs.release.outputs.releases_created == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      release_matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
        with:
          version: "latest"
          python-version: 3.13
          enable-cache: "auto"
          cache-dependency-glob: |
            pyproject.toml
            uv.lock
          restore-cache: "true"

      - name: Set up Python
        run: uv python install

      - name: Build Release Matrix
        id: build-matrix
        env:
          PATHS_RELEASED: ${{ needs.release.outputs.paths_released }}
          RELEASE_PLEASE_OUTPUTS: ${{ needs.release.outputs.all_outputs }}
        run: |
          uv run deploy release-matrix build

  dispatch-matrix:
    needs: release-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: ${{ fromJson(needs.release-matrix.outputs.release_matrix) }}
    steps:
      - name: Dispatch Helm Chart Release Build
        uses: peter-evans/repository-dispatch@5fc4efd1a4797ddb68ffd0714a238564e4cc0e6f # v4.0.0
        with:
          event-type: helm-release-build
          token: ${{ secrets.GITHUB_TOKEN }}
          client-payload: |-
            {
              "chart_name": "${{ matrix.release.chart_name }}",
              "chart_path": "${{ matrix.release.chart_path }}",
              "chart_version": "${{ matrix.release.chart_version }}",
              "tag_name": "${{ matrix.release.tag_name }}",
              "sha": "${{ matrix.release.sha }}"
            }
